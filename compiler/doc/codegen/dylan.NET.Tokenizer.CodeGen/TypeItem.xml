<Type Name="TypeItem" FullName="dylan.NET.Tokenizer.CodeGen.TypeItem">
  <TypeSignature Language="C#" Value="public class TypeItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TypeItem extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>tokenizer.CodeGen</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeItem (string nme, IKVM.Reflection.Emit.EnumBuilder bld3);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string nme, class IKVM.Reflection.Emit.EnumBuilder bld3) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="nme" Type="System.String" />
        <Parameter Name="bld3" Type="IKVM.Reflection.Emit.EnumBuilder" />
      </Parameters>
      <Docs>
        <param name="nme">To be added.</param>
        <param name="bld3">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeItem (string nme, IKVM.Reflection.Emit.TypeBuilder bld);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string nme, class IKVM.Reflection.Emit.TypeBuilder bld) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="nme" Type="System.String" />
        <Parameter Name="bld" Type="IKVM.Reflection.Emit.TypeBuilder" />
      </Parameters>
      <Docs>
        <param name="nme">To be added.</param>
        <param name="bld">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCtor">
      <MemberSignature Language="C#" Value="public void AddCtor (dylan.NET.Tokenizer.CodeGen.CtorItem c);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void AddCtor(class dylan.NET.Tokenizer.CodeGen.CtorItem c) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="dylan.NET.Tokenizer.CodeGen.CtorItem" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddField">
      <MemberSignature Language="C#" Value="public void AddField (dylan.NET.Tokenizer.CodeGen.FieldItem f);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void AddField(class dylan.NET.Tokenizer.CodeGen.FieldItem f) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="dylan.NET.Tokenizer.CodeGen.FieldItem" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInterface">
      <MemberSignature Language="C#" Value="public void AddInterface (IKVM.Reflection.Type i);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void AddInterface(class IKVM.Reflection.Type i) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethod">
      <MemberSignature Language="C#" Value="public void AddMethod (dylan.NET.Tokenizer.CodeGen.MethodItem m);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void AddMethod(class dylan.NET.Tokenizer.CodeGen.MethodItem m) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="dylan.NET.Tokenizer.CodeGen.MethodItem" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddType">
      <MemberSignature Language="C#" Value="public void AddType (dylan.NET.Tokenizer.CodeGen.TypeItem t);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void AddType(class dylan.NET.Tokenizer.CodeGen.TypeItem t) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="dylan.NET.Tokenizer.CodeGen.TypeItem" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsmB">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.Emit.AssemblyBuilder AsmB;" />
      <MemberSignature Language="ILAsm" Value=".field public class IKVM.Reflection.Emit.AssemblyBuilder AsmB" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BakedTyp">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.Type BakedTyp;" />
      <MemberSignature Language="ILAsm" Value=".field public class IKVM.Reflection.Type BakedTyp" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ctors">
      <MemberSignature Language="C#" Value="public C5.IList&lt;dylan.NET.Tokenizer.CodeGen.CtorItem&gt; Ctors;" />
      <MemberSignature Language="ILAsm" Value=".field public class C5.IList`1&lt;class dylan.NET.Tokenizer.CodeGen.CtorItem&gt; Ctors" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>C5.IList&lt;dylan.NET.Tokenizer.CodeGen.CtorItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumBldr">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.Emit.EnumBuilder EnumBldr;" />
      <MemberSignature Language="ILAsm" Value=".field public class IKVM.Reflection.Emit.EnumBuilder EnumBldr" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.Emit.EnumBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public C5.HashDictionary&lt;string,dylan.NET.Tokenizer.CodeGen.FieldItem&gt; Fields;" />
      <MemberSignature Language="ILAsm" Value=".field public class C5.HashDictionary`2&lt;string, class dylan.NET.Tokenizer.CodeGen.FieldItem&gt; Fields" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>C5.HashDictionary&lt;System.String,dylan.NET.Tokenizer.CodeGen.FieldItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenParams">
      <MemberSignature Language="C#" Value="public C5.LinkedList&lt;IKVM.Reflection.Emit.GenericTypeParameterBuilder&gt; GenParams;" />
      <MemberSignature Language="ILAsm" Value=".field public class C5.LinkedList`1&lt;class IKVM.Reflection.Emit.GenericTypeParameterBuilder&gt; GenParams" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>C5.LinkedList&lt;IKVM.Reflection.Emit.GenericTypeParameterBuilder&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCtor">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.ConstructorInfo GetCtor (IKVM.Reflection.Type[] paramst, IKVM.Reflection.Type auxt);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class IKVM.Reflection.ConstructorInfo GetCtor(class IKVM.Reflection.Type[] paramst, class IKVM.Reflection.Type auxt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramst" Type="IKVM.Reflection.Type[]" />
        <Parameter Name="auxt" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="paramst">To be added.</param>
        <param name="auxt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.FieldInfo GetField (string nam, IKVM.Reflection.Type auxt);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class IKVM.Reflection.FieldInfo GetField(string nam, class IKVM.Reflection.Type auxt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nam" Type="System.String" />
        <Parameter Name="auxt" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="nam">To be added.</param>
        <param name="auxt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGenericMethod">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.MethodInfo GetGenericMethod (string nam, IKVM.Reflection.Type[] genparams, IKVM.Reflection.Type[] paramst, IKVM.Reflection.Type auxt);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class IKVM.Reflection.MethodInfo GetGenericMethod(string nam, class IKVM.Reflection.Type[] genparams, class IKVM.Reflection.Type[] paramst, class IKVM.Reflection.Type auxt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nam" Type="System.String" />
        <Parameter Name="genparams" Type="IKVM.Reflection.Type[]" />
        <Parameter Name="paramst" Type="IKVM.Reflection.Type[]" />
        <Parameter Name="auxt" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="nam">To be added.</param>
        <param name="genparams">To be added.</param>
        <param name="paramst">To be added.</param>
        <param name="auxt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.MethodInfo GetMethod (string nam, IKVM.Reflection.Type[] paramst, IKVM.Reflection.Type auxt);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class IKVM.Reflection.MethodInfo GetMethod(string nam, class IKVM.Reflection.Type[] paramst, class IKVM.Reflection.Type auxt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nam" Type="System.String" />
        <Parameter Name="paramst" Type="IKVM.Reflection.Type[]" />
        <Parameter Name="auxt" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="nam">To be added.</param>
        <param name="paramst">To be added.</param>
        <param name="auxt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProtoMethod">
      <MemberSignature Language="C#" Value="public dylan.NET.Tokenizer.CodeGen.MethodItem GetProtoMethod (string nam, IKVM.Reflection.Type[] paramst);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class dylan.NET.Tokenizer.CodeGen.MethodItem GetProtoMethod(string nam, class IKVM.Reflection.Type[] paramst) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>dylan.NET.Tokenizer.CodeGen.MethodItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nam" Type="System.String" />
        <Parameter Name="paramst" Type="IKVM.Reflection.Type[]" />
      </Parameters>
      <Docs>
        <param name="nam">To be added.</param>
        <param name="paramst">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.Type GetType (string nam);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class IKVM.Reflection.Type GetType(string nam) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nam" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nam">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeItem">
      <MemberSignature Language="C#" Value="public dylan.NET.Tokenizer.CodeGen.TypeItem GetTypeItem (IKVM.Reflection.Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class dylan.NET.Tokenizer.CodeGen.TypeItem GetTypeItem(class IKVM.Reflection.Type t) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>dylan.NET.Tokenizer.CodeGen.TypeItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeItem">
      <MemberSignature Language="C#" Value="public dylan.NET.Tokenizer.CodeGen.TypeItem GetTypeItem (string nam);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class dylan.NET.Tokenizer.CodeGen.TypeItem GetTypeItem(string nam) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>dylan.NET.Tokenizer.CodeGen.TypeItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nam" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nam">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InhTyp">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.Type InhTyp;" />
      <MemberSignature Language="ILAsm" Value=".field public class IKVM.Reflection.Type InhTyp" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interfaces">
      <MemberSignature Language="C#" Value="public C5.IList&lt;IKVM.Reflection.Type&gt; Interfaces;" />
      <MemberSignature Language="ILAsm" Value=".field public class C5.IList`1&lt;class IKVM.Reflection.Type&gt; Interfaces" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>C5.IList&lt;IKVM.Reflection.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public bool IsEnum;" />
      <MemberSignature Language="ILAsm" Value=".field public bool IsEnum" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic;" />
      <MemberSignature Language="ILAsm" Value=".field public bool IsStatic" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Methods">
      <MemberSignature Language="C#" Value="public C5.HashDictionary&lt;string,C5.IList&lt;dylan.NET.Tokenizer.CodeGen.MethodItem&gt;&gt; Methods;" />
      <MemberSignature Language="ILAsm" Value=".field public class C5.HashDictionary`2&lt;string, class C5.IList`1&lt;class dylan.NET.Tokenizer.CodeGen.MethodItem&gt;&gt; Methods" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>C5.HashDictionary&lt;System.String,C5.IList&lt;dylan.NET.Tokenizer.CodeGen.MethodItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name;" />
      <MemberSignature Language="ILAsm" Value=".field public string Name" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeInterfaces">
      <MemberSignature Language="C#" Value="public void NormalizeInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void NormalizeInterfaces() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NrGenParams">
      <MemberSignature Language="C#" Value="public int NrGenParams;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 NrGenParams" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeBldr">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.Emit.TypeBuilder TypeBldr;" />
      <MemberSignature Language="ILAsm" Value=".field public class IKVM.Reflection.Emit.TypeBuilder TypeBldr" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Types">
      <MemberSignature Language="C#" Value="public C5.IList&lt;dylan.NET.Tokenizer.CodeGen.TypeItem&gt; Types;" />
      <MemberSignature Language="ILAsm" Value=".field public class C5.IList`1&lt;class dylan.NET.Tokenizer.CodeGen.TypeItem&gt; Types" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>C5.IList&lt;dylan.NET.Tokenizer.CodeGen.TypeItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypGenParams">
      <MemberSignature Language="C#" Value="public C5.HashDictionary&lt;string,dylan.NET.Tokenizer.CodeGen.TypeParamItem&gt; TypGenParams;" />
      <MemberSignature Language="ILAsm" Value=".field public class C5.HashDictionary`2&lt;string, class dylan.NET.Tokenizer.CodeGen.TypeParamItem&gt; TypGenParams" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>C5.HashDictionary&lt;System.String,dylan.NET.Tokenizer.CodeGen.TypeParamItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
