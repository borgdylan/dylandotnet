<Type Name="TypeList" FullName="dylan.NET.Tokenizer.CodeGen.TypeList">
  <TypeSignature Language="C#" Value="public class TypeList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TypeList extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>tokenizer.CodeGen</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeList ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddType">
      <MemberSignature Language="C#" Value="public void AddType (dylan.NET.Tokenizer.CodeGen.TypeItem t);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void AddType(class dylan.NET.Tokenizer.CodeGen.TypeItem t) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="dylan.NET.Tokenizer.CodeGen.TypeItem" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDefaultCtor">
      <MemberSignature Language="C#" Value="public void EnsureDefaultCtor (IKVM.Reflection.Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void EnsureDefaultCtor(class IKVM.Reflection.Type t) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCtor">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.ConstructorInfo GetCtor (IKVM.Reflection.Type t, IKVM.Reflection.Type[] paramst, IKVM.Reflection.Type auxt);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class IKVM.Reflection.ConstructorInfo GetCtor(class IKVM.Reflection.Type t, class IKVM.Reflection.Type[] paramst, class IKVM.Reflection.Type auxt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="IKVM.Reflection.Type" />
        <Parameter Name="paramst" Type="IKVM.Reflection.Type[]" />
        <Parameter Name="auxt" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <param name="paramst">To be added.</param>
        <param name="auxt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.FieldInfo GetField (IKVM.Reflection.Type t, string nam, IKVM.Reflection.Type auxt);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class IKVM.Reflection.FieldInfo GetField(class IKVM.Reflection.Type t, string nam, class IKVM.Reflection.Type auxt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="IKVM.Reflection.Type" />
        <Parameter Name="nam" Type="System.String" />
        <Parameter Name="auxt" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <param name="nam">To be added.</param>
        <param name="auxt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.MethodInfo GetMethod (IKVM.Reflection.Type t, dylan.NET.Tokenizer.AST.Tokens.MethodNameTok mn, IKVM.Reflection.Type[] paramst, IKVM.Reflection.Type auxt);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class IKVM.Reflection.MethodInfo GetMethod(class IKVM.Reflection.Type t, class dylan.NET.Tokenizer.AST.Tokens.MethodNameTok mn, class IKVM.Reflection.Type[] paramst, class IKVM.Reflection.Type auxt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="IKVM.Reflection.Type" />
        <Parameter Name="mn" Type="dylan.NET.Tokenizer.AST.Tokens.MethodNameTok" />
        <Parameter Name="paramst" Type="IKVM.Reflection.Type[]" />
        <Parameter Name="auxt" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <param name="mn">To be added.</param>
        <param name="paramst">To be added.</param>
        <param name="auxt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public IKVM.Reflection.Type GetType (string nam, int gp);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class IKVM.Reflection.Type GetType(string nam, int32 gp) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IKVM.Reflection.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nam" Type="System.String" />
        <Parameter Name="gp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nam">To be added.</param>
        <param name="gp">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeItem">
      <MemberSignature Language="C#" Value="public dylan.NET.Tokenizer.CodeGen.TypeItem GetTypeItem (IKVM.Reflection.Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class dylan.NET.Tokenizer.CodeGen.TypeItem GetTypeItem(class IKVM.Reflection.Type t) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>dylan.NET.Tokenizer.CodeGen.TypeItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="IKVM.Reflection.Type" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeItem">
      <MemberSignature Language="C#" Value="public dylan.NET.Tokenizer.CodeGen.TypeItem GetTypeItem (string nam, int gp);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class dylan.NET.Tokenizer.CodeGen.TypeItem GetTypeItem(string nam, int32 gp) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>dylan.NET.Tokenizer.CodeGen.TypeItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nam" Type="System.String" />
        <Parameter Name="gp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nam">To be added.</param>
        <param name="gp">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Types">
      <MemberSignature Language="C#" Value="public C5.IList&lt;dylan.NET.Tokenizer.CodeGen.TypeItem&gt; Types;" />
      <MemberSignature Language="ILAsm" Value=".field public class C5.IList`1&lt;class dylan.NET.Tokenizer.CodeGen.TypeItem&gt; Types" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>C5.IList&lt;dylan.NET.Tokenizer.CodeGen.TypeItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
