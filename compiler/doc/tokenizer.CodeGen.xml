<doc>
    <assembly>
        <name>tokenizer.CodeGen</name>
    </assembly>
    <members>
        <member name="T:dylan.NET.Tokenizer.CodeGen.ASTEmitDelegate">
            <param name="t">To be added.</param>
            <param name="emt">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.CodeGenerator">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.CodeGenerator()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.CodeGenerator.EmitMSIL(dylan.NET.Tokenizer.AST.Stmts.StmtSet,System.String)">
            <param name="stmts">To be added.</param>
            <param name="fpath">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.CtorItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.CtorItem()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.CtorItem(IKVM.Reflection.Type[],IKVM.Reflection.Emit.ConstructorBuilder)">
            <param name="ptyps">To be added.</param>
            <param name="bld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.CtorItem.CtorBldr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.CtorItem.ParamTyps">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.CtorItem.ToString()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.Evaluator">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.Evaluator()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.ASTEmit(dylan.NET.Tokenizer.AST.Tokens.Token,System.Boolean)">
            <param name="tok">To be added.</param>
            <param name="emt">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.ASTEmitIdent(dylan.NET.Tokenizer.AST.Tokens.Ident,System.Boolean,dylan.NET.Tokenizer.CodeGen.ASTEmitDelegate)">
            <param name="idt">To be added.</param>
            <param name="emt">To be added.</param>
            <param name="aed">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.ASTEmitMethod(dylan.NET.Tokenizer.AST.Tokens.MethodCallTok,System.Boolean,dylan.NET.Tokenizer.CodeGen.ASTEmitDelegate)">
            <param name="mctok">To be added.</param>
            <param name="emt">To be added.</param>
            <param name="aed">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.ASTEmitNew(dylan.NET.Tokenizer.AST.Tokens.NewCallTok,System.Boolean,dylan.NET.Tokenizer.CodeGen.ASTEmitDelegate)">
            <param name="nctok">To be added.</param>
            <param name="emt">To be added.</param>
            <param name="aed">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.ConvToAST(dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="exp">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.ConvToRPN(dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="exp">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.Evaluate(dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="exp">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.EvaluateHIf(dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="exp">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.EvaluateHIf(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="rt">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.RetPrec(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="tok">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Evaluator.Stack">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.StoreEmit(dylan.NET.Tokenizer.AST.Tokens.Token,dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="tok">To be added.</param>
            <param name="exp">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.FieldItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.FieldItem()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.FieldItem(System.String,IKVM.Reflection.Type,IKVM.Reflection.Emit.FieldBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="bld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.FieldItem.FieldBldr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.FieldItem.FieldTyp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.FieldItem.LitVal">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.FieldItem.Name">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.FieldItem.ToString()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.Helpers">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ApplyAsmAttrs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ApplyClsAttrs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ApplyEventAttrs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ApplyFldAttrs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ApplyMetAttrs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ApplyPropAttrs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.BaseFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.BoolFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.CheckAssignability(IKVM.Reflection.Type,IKVM.Reflection.Type)">
            <param name="t1">To be added.</param>
            <param name="t2">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.CheckIfArrLen(dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="ind">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.CheckSHLRLHS(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.CheckSHLRRHS(IKVM.Reflection.Type,System.Boolean)">
            <param name="t">To be added.</param>
            <param name="accepti64">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.CheckSigned(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.CheckUnsigned(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.CommitEvalTTok(dylan.NET.Tokenizer.AST.Tokens.TypeToks.TypeTok)">
            <param name="tt">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.DelegateFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitConv(IKVM.Reflection.Type,IKVM.Reflection.Type)">
            <param name="source">To be added.</param>
            <param name="sink">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitElemLd(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitFldLd(IKVM.Reflection.FieldInfo,System.Boolean)">
            <param name="fld">To be added.</param>
            <param name="stat">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitFldSt(IKVM.Reflection.FieldInfo,System.Boolean)">
            <param name="fld">To be added.</param>
            <param name="stat">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitLiteral(dylan.NET.Tokenizer.AST.Tokens.Literals.Literal)">
            <param name="lit">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitLocLd(System.Int32,System.Boolean)">
            <param name="ind">To be added.</param>
            <param name="locarg">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitLocSt(System.Int32,System.Boolean)">
            <param name="ind">To be added.</param>
            <param name="locarg">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitMetCall(IKVM.Reflection.MethodInfo,System.Boolean)">
            <param name="met">To be added.</param>
            <param name="stat">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitOp(dylan.NET.Tokenizer.AST.Tokens.Ops.Op,System.Boolean)">
            <param name="op">To be added.</param>
            <param name="s">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitPtrLd(IKVM.Reflection.MethodInfo,System.Boolean)">
            <param name="met">To be added.</param>
            <param name="stat">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.EqSuppFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EvalTTok(dylan.NET.Tokenizer.AST.Tokens.TypeToks.TypeTok)">
            <param name="tt">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetExtFld(IKVM.Reflection.Type,System.String)">
            <param name="t">To be added.</param>
            <param name="fld">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetExtMet(IKVM.Reflection.Type,dylan.NET.Tokenizer.AST.Tokens.MethodNameTok,IKVM.Reflection.Type[])">
            <param name="t">To be added.</param>
            <param name="mn">To be added.</param>
            <param name="paramtyps">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetExtProp(IKVM.Reflection.Type,System.String)">
            <param name="t">To be added.</param>
            <param name="prop">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLbl(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLocCtor(IKVM.Reflection.Type,IKVM.Reflection.Type[])">
            <param name="t">To be added.</param>
            <param name="typs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLocFld(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLocMet(System.String,IKVM.Reflection.Type[])">
            <param name="nam">To be added.</param>
            <param name="typs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLocMetNoParams(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetPrimitiveNumericSize(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.IsPrimitiveFPType(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.IsPrimitiveIntegralType(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.IsPrimitiveNumericType(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.LeftOp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.LiteralToConst(dylan.NET.Tokenizer.AST.Tokens.Literals.Literal)">
            <param name="lit">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.NullExprFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.OpCodeSuppFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.PostProcessParams(dylan.NET.Tokenizer.AST.Exprs.Expr[])">
            <param name="ps">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.PostProcessParamsConstr(dylan.NET.Tokenizer.AST.Exprs.Expr[])">
            <param name="ps">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessClassAttrs(dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute[])">
            <param name="attrs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessConst(dylan.NET.Tokenizer.AST.Tokens.Literals.ConstLiteral)">
            <param name="lit">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessEventAttrs(dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute[])">
            <param name="attrs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessFieldAttrs(dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute[])">
            <param name="attrs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessForeach(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessMethodAttrs(dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute[])">
            <param name="attrs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessParams(dylan.NET.Tokenizer.AST.Exprs.Expr[])">
            <param name="ps">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessPropAttrs(dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute[])">
            <param name="attrs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.RightOp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.SetPopFlg(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.StringFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.StripDelMtdName(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.IfItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.IfItem()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.IfItem(IKVM.Reflection.Emit.Label,IKVM.Reflection.Emit.Label)">
            <param name="endl">To be added.</param>
            <param name="nbl">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.IfItem.ElsePass">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.IfItem.EndLabel">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.IfItem.NextBlkLabel">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.LabelItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.LabelItem()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.LabelItem(System.String,IKVM.Reflection.Emit.Label)">
            <param name="ln">To be added.</param>
            <param name="l">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.LabelItem.Lbl">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.LabelItem.LblName">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.LockItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.LockItem()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.LockItem(System.Int32)">
            <param name="loc">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.LockItem.LockeeLoc">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.LoopItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.LoopItem()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.LoopItem(IKVM.Reflection.Emit.Label,IKVM.Reflection.Emit.Label)">
            <param name="startl">To be added.</param>
            <param name="endl">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.LoopItem.EndLabel">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.LoopItem.StartLabel">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.MethodItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.MethodItem()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.MethodItem(System.String,IKVM.Reflection.Type,IKVM.Reflection.Type[],IKVM.Reflection.Emit.MethodBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="ptyps">To be added.</param>
            <param name="bld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.MethodItem.MethodBldr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.MethodItem.MethodTyp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.MethodItem.Name">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.MethodItem.ParamTyps">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.MethodItem.ToString()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.OpStack">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.OpStack()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.OpStack.getLength()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.OpStack.PopOp()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.OpStack.PushOp(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="optok">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.OpStack.TopOp()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.StmtReader">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.StmtReader()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.StmtReader.AttrStmtToCAB(dylan.NET.Tokenizer.AST.Stmts.AttrStmt)">
            <param name="stm">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.StmtReader.Read(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.String)">
            <param name="stm">To be added.</param>
            <param name="fpath">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.SymTable">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddAsmCA(IKVM.Reflection.Emit.CustomAttributeBuilder)">
            <param name="ca">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddClsCA(IKVM.Reflection.Emit.CustomAttributeBuilder)">
            <param name="ca">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddCtor(IKVM.Reflection.Type[],IKVM.Reflection.Emit.ConstructorBuilder)">
            <param name="ptyps">To be added.</param>
            <param name="met">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddDef(System.String)">
            <param name="sym">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddEventCA(IKVM.Reflection.Emit.CustomAttributeBuilder)">
            <param name="ca">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddFld(System.String,IKVM.Reflection.Type,IKVM.Reflection.Emit.FieldBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="fld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddFldCA(IKVM.Reflection.Emit.CustomAttributeBuilder)">
            <param name="ca">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddIf()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddLbl(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddLock(System.Int32)">
            <param name="loc">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddLoop()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddMet(System.String,IKVM.Reflection.Type,IKVM.Reflection.Type[],IKVM.Reflection.Emit.MethodBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="ptyps">To be added.</param>
            <param name="met">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddMtdCA(IKVM.Reflection.Emit.CustomAttributeBuilder)">
            <param name="ca">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddNestedCtor(IKVM.Reflection.Type[],IKVM.Reflection.Emit.ConstructorBuilder)">
            <param name="ptyps">To be added.</param>
            <param name="met">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddNestedFld(System.String,IKVM.Reflection.Type,IKVM.Reflection.Emit.FieldBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="fld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddNestedMet(System.String,IKVM.Reflection.Type,IKVM.Reflection.Type[],IKVM.Reflection.Emit.MethodBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="ptyps">To be added.</param>
            <param name="met">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddParamCA(System.Int32,IKVM.Reflection.Emit.CustomAttributeBuilder)">
            <param name="ind">To be added.</param>
            <param name="ca">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddPropCA(IKVM.Reflection.Emit.CustomAttributeBuilder)">
            <param name="ca">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddTypArr(IKVM.Reflection.Type[])">
            <param name="arr">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddVar(System.String,System.Boolean,System.Int32,IKVM.Reflection.Type,System.Int32)">
            <param name="nme">To be added.</param>
            <param name="la">To be added.</param>
            <param name="ind">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="lin">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.AssemblyCALst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.CheckUnusedVar()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.ClassCALst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.CmpTyps(IKVM.Reflection.Type[],IKVM.Reflection.Type[])">
            <param name="arra">To be added.</param>
            <param name="arrb">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.CurnTypItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.EvalDef(System.String)">
            <param name="sym">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.EventCALst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.FieldCALst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindCtor(IKVM.Reflection.Type[])">
            <param name="paramst">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindFld(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindLbl(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindMet(System.String,IKVM.Reflection.Type[])">
            <param name="nam">To be added.</param>
            <param name="paramst">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindMetNoParams(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindVar(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.MethodCALst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.ParameterCALst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.PopIf()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.PopLock()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.PopLoop()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.PopScope()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.PopTypArr()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.PropertyCALst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.PushScope()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ReadIfElsePass()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ReadIfEndLbl()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ReadIfNxtBlkLbl()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ReadLockeeLoc()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ReadLoopEndLbl()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ReadLoopStartLbl()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetAsmCAs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetClsCAs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetEventCAs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetFldCAs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetIf()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetLbl()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetLock()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetLoop()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetMetCAs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetNestedCtor()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetNestedFld()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetNestedMet()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetParamCAs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetPropCAs()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetUsed(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetVar()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.SetIfElsePass()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.SetIfNxtBlkLbl()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.StoreFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.TypeLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.UnDef(System.String)">
            <param name="sym">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.TypeArr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.TypeArr()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.TypeArr.Arr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.TypeItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.TypeItem()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.TypeItem(System.String,IKVM.Reflection.Emit.TypeBuilder)">
            <param name="nme">To be added.</param>
            <param name="bld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeItem.AddCtor(dylan.NET.Tokenizer.CodeGen.CtorItem)">
            <param name="c">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeItem.AddField(dylan.NET.Tokenizer.CodeGen.FieldItem)">
            <param name="f">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeItem.AddInterface(IKVM.Reflection.Type)">
            <param name="i">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeItem.AddMethod(dylan.NET.Tokenizer.CodeGen.MethodItem)">
            <param name="m">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.TypeItem.Ctors">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.TypeItem.Fields">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeItem.GetCtor(IKVM.Reflection.Type[])">
            <param name="paramst">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeItem.GetField(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeItem.GetMethod(System.String,IKVM.Reflection.Type[])">
            <param name="nam">To be added.</param>
            <param name="paramst">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.TypeItem.InhTyp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.TypeItem.Interfaces">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.TypeItem.Methods">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.TypeItem.Name">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeItem.ToString()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.TypeItem.TypeBldr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.TypeList">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.TypeList()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeList.AddType(dylan.NET.Tokenizer.CodeGen.TypeItem)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeList.EnsureDefaultCtor(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeList.GetCtor(IKVM.Reflection.Type,IKVM.Reflection.Type[])">
            <param name="t">To be added.</param>
            <param name="paramst">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeList.GetField(IKVM.Reflection.Type,System.String)">
            <param name="t">To be added.</param>
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeList.GetMethod(IKVM.Reflection.Type,System.String,IKVM.Reflection.Type[])">
            <param name="t">To be added.</param>
            <param name="nam">To be added.</param>
            <param name="paramst">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeList.GetType(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeList.GetTypeItem(IKVM.Reflection.Type)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.TypeList.GetTypeItem(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.TypeList.Types">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.VarItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.VarItem()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.VarItem(System.String,System.Boolean,System.Int32,IKVM.Reflection.Type)">
            <param name="nme">To be added.</param>
            <param name="la">To be added.</param>
            <param name="ind">To be added.</param>
            <param name="typ">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.VarItem(System.String,System.Boolean,System.Int32,IKVM.Reflection.Type,System.Int32)">
            <param name="nme">To be added.</param>
            <param name="la">To be added.</param>
            <param name="ind">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="line">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.Index">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.Line">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.LocArg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.Name">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.Stored">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.VarItem.ToString()">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.Used">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.VarTyp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
    </members>
</doc>
