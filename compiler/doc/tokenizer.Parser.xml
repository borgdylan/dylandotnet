<doc>
    <assembly>
        <name>tokenizer.Parser</name>
    </assembly>
    <members>
        <member name="T:dylan.NET.Tokenizer.Parser.ExprOptimizer">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.Parser.ExprOptimizer()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.Parser.ExprOptimizer(dylan.NET.Tokenizer.Parser.ParserFlags)">
            <param name="pf">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ExprOptimizer.checkVarAs(dylan.NET.Tokenizer.AST.Exprs.Expr,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ExprOptimizer.IdentToMNTok(dylan.NET.Tokenizer.AST.Tokens.Ident,dylan.NET.Tokenizer.AST.Tokens.MethodNameTok)">
            <param name="idt">To be added.</param>
            <param name="mnt">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ExprOptimizer.Optimize(dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="exp">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ExprOptimizer.PFlags">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ExprOptimizer.procIdentArrayAccess(dylan.NET.Tokenizer.AST.Exprs.Expr,System.Int32)">
            <param name="stm">To be added.</param>
            <param name="i">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ExprOptimizer.procMethodCall(dylan.NET.Tokenizer.AST.Exprs.Expr,System.Int32)">
            <param name="stm">To be added.</param>
            <param name="i">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ExprOptimizer.procMtdArrayAccess(dylan.NET.Tokenizer.AST.Exprs.Expr,System.Int32)">
            <param name="stm">To be added.</param>
            <param name="i">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ExprOptimizer.procMtdName(dylan.NET.Tokenizer.AST.Exprs.Expr,System.Int32)">
            <param name="stm">To be added.</param>
            <param name="i">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ExprOptimizer.procNewCall(dylan.NET.Tokenizer.AST.Exprs.Expr,System.Int32)">
            <param name="stm">To be added.</param>
            <param name="i">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ExprOptimizer.procType(dylan.NET.Tokenizer.AST.Exprs.Expr,System.Int32)">
            <param name="stm">To be added.</param>
            <param name="i">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.Parser.Parser">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.Parser.Parser()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.Parser.Parser(dylan.NET.Tokenizer.Parser.ParserFlags)">
            <param name="pf">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.Parser.Parse(dylan.NET.Tokenizer.AST.Stmts.StmtSet)">
            <param name="stms">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.Parser.PFlags">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.Parser.ParserFlags">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.Parser.ParserFlags()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.Parser.ParserFlags()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.ArrFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.ArrSlot">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.AsFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.AssemFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.CmtFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.ConvFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.ConvTyp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.CurPath">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.DurConvFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.IdentFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.IfFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.isChanged">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.MetCallFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.MetChainFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.NegFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.NoOptFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.NotFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.OrdOp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.ProcessTTokOnly">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.RefFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ParserFlags.SetUnaryFalse()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.StringFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ParserFlags.UpdateBoolLit(dylan.NET.Tokenizer.AST.Tokens.Literals.BooleanLiteral)">
            <param name="id">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ParserFlags.UpdateCharLit(dylan.NET.Tokenizer.AST.Tokens.Literals.CharLiteral)">
            <param name="id">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ParserFlags.UpdateIdent(dylan.NET.Tokenizer.AST.Tokens.Ident)">
            <param name="id">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ParserFlags.UpdateMeTok(dylan.NET.Tokenizer.AST.Tokens.MeTok)">
            <param name="id">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ParserFlags.UpdateNullLit(dylan.NET.Tokenizer.AST.Tokens.Literals.NullLiteral)">
            <param name="id">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ParserFlags.UpdateNumLit(dylan.NET.Tokenizer.AST.Tokens.Literals.NumberLiteral)">
            <param name="id">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.ParserFlags.UpdateStringLit(dylan.NET.Tokenizer.AST.Tokens.Literals.StringLiteral)">
            <param name="id">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.ParserFlags.ValinrefFlag">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.Parser.StmtOptimizer">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.Parser.StmtOptimizer()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.Parser.StmtOptimizer(dylan.NET.Tokenizer.Parser.ParserFlags)">
            <param name="pf">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.AssOpt(dylan.NET.Tokenizer.AST.Stmts.Stmt)">
            <param name="stm">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkAssembly(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkAssign(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkBreak(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkCatch(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkClass(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkCmt(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkContinue(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkDebug(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkDelegate(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkDo(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkDoUntil(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkDoWhile(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkElse(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkElseIf(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkEndCls(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkEndDo(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkEndIf(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkEndMtd(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkEndNS(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkEndTry(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkField(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkFinally(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkGoto(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkIf(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkImport(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkInclude(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkLabel(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkLocimport(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkMethod(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkMethodCall(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkNS(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkPlace(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkRefasm(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkRefstdasm(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkReturn(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkScope(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkThrow(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkTry(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkUntil(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkVarAs(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkVer(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.checkWhile(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.Boolean@)">
            <param name="stm">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.StmtOptimizer.Optimize(dylan.NET.Tokenizer.AST.Stmts.Stmt)">
            <param name="stm">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.StmtOptimizer.PFlags">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.Parser.TokenOptimizer">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.Parser.TokenOptimizer()">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.Parser.TokenOptimizer(dylan.NET.Tokenizer.Parser.ParserFlags)">
            <param name="pf">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.TokenOptimizer.GenLvl">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.TokenOptimizer.isFirstToken">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.TokenOptimizer.Optimize(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="tok">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.Parser.TokenOptimizer.Optimize(dylan.NET.Tokenizer.AST.Tokens.Token,dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="tok">To be added.</param>
            <param name="lkahead">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.Parser.TokenOptimizer.PFlags">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
    </members>
</doc>
