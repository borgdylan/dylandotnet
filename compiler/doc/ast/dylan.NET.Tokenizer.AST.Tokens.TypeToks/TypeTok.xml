<Type Name="TypeTok" FullName="dylan.NET.Tokenizer.AST.Tokens.TypeToks.TypeTok">
  <TypeSignature Language="C#" Value="public class TypeTok : dylan.NET.Tokenizer.AST.Tokens.Token" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TypeTok extends dylan.NET.Tokenizer.AST.Tokens.Token" />
  <AssemblyInfo>
    <AssemblyName>tokenizer.AST</AssemblyName>
    <AssemblyVersion>11.2.7.2</AssemblyVersion>
    <AssemblyVersion>11.2.7.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>dylan.NET.Tokenizer.AST.Tokens.Token</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a type token that is usable to assign a type to something.</summary>
    <remarks>All type tokens should directly or indirectly inherit from this class.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeTok ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>11.2.7.2</AssemblyVersion>
        <AssemblyVersion>11.2.7.3</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Constructs a new TypeToken.</summary>
        <remarks>If you want to pass the type name during cosntruction use the other constructor.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeTok (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>11.2.7.2</AssemblyVersion>
        <AssemblyVersion>11.2.7.3</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">A valid type name that is reachable given the defined lists of assemblies and namespaces to import.</param>
        <summary>Constructs a new TypeTok assigning the type name's value as specified in the value parameter.</summary>
        <remarks>If you wish to set the type name later use the other constructor and set the 'Value' field acccordingly.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray;" />
      <MemberSignature Language="ILAsm" Value=".field public bool IsArray" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>11.2.7.2</AssemblyVersion>
        <AssemblyVersion>11.2.7.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set to true indicates that an array type is desired.</summary>
        <remarks>Usually this field gets set true by the parser after finding '[]' after the type name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRef">
      <MemberSignature Language="C#" Value="public bool IsByRef;" />
      <MemberSignature Language="ILAsm" Value=".field public bool IsByRef" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>11.2.7.2</AssemblyVersion>
        <AssemblyVersion>11.2.7.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set to true indicates that a byref type is desired.</summary>
        <remarks>Normally this field gets set true by the parser after finding '&amp;' after the type name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrdOp">
      <MemberSignature Language="C#" Value="public string OrdOp;" />
      <MemberSignature Language="ILAsm" Value=".field public string OrdOp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>11.2.7.2</AssemblyVersion>
        <AssemblyVersion>11.2.7.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefTyp">
      <MemberSignature Language="C#" Value="public Type RefTyp;" />
      <MemberSignature Language="ILAsm" Value=".field public class System.Type RefTyp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>11.2.7.2</AssemblyVersion>
        <AssemblyVersion>11.2.7.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Holds the System.Type instance representing the required type. This is set automatically is the standard type tokens are used.</summary>
        <remarks>Make sure not to set this manually. Let the constructors of the standard type tokens or the parser/codegen infer its value instead.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
