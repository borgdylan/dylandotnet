<Type Name="DoubleLiteral" FullName="dylan.NET.Tokenizer.AST.Tokens.Literals.DoubleLiteral">
  <TypeSignature Language="C#" Value="public class DoubleLiteral : dylan.NET.Tokenizer.AST.Tokens.Literals.NumberLiteral" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DoubleLiteral extends dylan.NET.Tokenizer.AST.Tokens.Literals.NumberLiteral" />
  <AssemblyInfo>
    <AssemblyName>tokenizer.AST</AssemblyName>
    <AssemblyVersion>11.2.7.2</AssemblyVersion>
    <AssemblyVersion>11.2.7.3</AssemblyVersion>
    <AssemblyVersion>11.2.7.4</AssemblyVersion>
    <AssemblyVersion>11.2.7.5</AssemblyVersion>
    <AssemblyVersion>11.2.7.6</AssemblyVersion>
    <AssemblyVersion>11.2.7.7</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>dylan.NET.Tokenizer.AST.Tokens.Literals.NumberLiteral</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a double (float64) literal.</summary>
    <remarks>Such literals may or may not have a 'd' suffix.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DoubleLiteral ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>11.2.7.2</AssemblyVersion>
        <AssemblyVersion>11.2.7.3</AssemblyVersion>
        <AssemblyVersion>11.2.7.4</AssemblyVersion>
        <AssemblyVersion>11.2.7.5</AssemblyVersion>
        <AssemblyVersion>11.2.7.6</AssemblyVersion>
        <AssemblyVersion>11.2.7.7</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Constructs a new DoubeLiteral.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DoubleLiteral (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>11.2.7.2</AssemblyVersion>
        <AssemblyVersion>11.2.7.3</AssemblyVersion>
        <AssemblyVersion>11.2.7.4</AssemblyVersion>
        <AssemblyVersion>11.2.7.5</AssemblyVersion>
        <AssemblyVersion>11.2.7.6</AssemblyVersion>
        <AssemblyVersion>11.2.7.7</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">This parameter is of no use in this case.</param>
        <summary>Constructs a new DoubeLiteral.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumVal">
      <MemberSignature Language="C#" Value="public double NumVal;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 NumVal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>11.2.7.2</AssemblyVersion>
        <AssemblyVersion>11.2.7.3</AssemblyVersion>
        <AssemblyVersion>11.2.7.4</AssemblyVersion>
        <AssemblyVersion>11.2.7.5</AssemblyVersion>
        <AssemblyVersion>11.2.7.6</AssemblyVersion>
        <AssemblyVersion>11.2.7.7</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The numeric value of the literal.</summary>
        <remarks>It is loaded using the ldc.r8 opcode.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
