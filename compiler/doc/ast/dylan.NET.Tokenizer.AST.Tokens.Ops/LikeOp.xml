<Type Name="LikeOp" FullName="dylan.NET.Tokenizer.AST.Tokens.Ops.LikeOp">
  <TypeSignature Language="C#" Value="public class LikeOp : dylan.NET.Tokenizer.AST.Tokens.Ops.ConditionalOp" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi LikeOp extends dylan.NET.Tokenizer.AST.Tokens.Ops.ConditionalOp" />
  <AssemblyInfo>
    <AssemblyName>tokenizer.AST</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>dylan.NET.Tokenizer.AST.Tokens.Ops.ConditionalOp</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a Regex Matching 'like' operator.</summary>
    <remarks>Checks if the string LChild conforms to the pattern string RCHild. The library System.dll is required for its Regex components. Regex is being used instead of the VB Like operator as of 11.2.7.6.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LikeOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs a new LikeOp.</summary>
        <remarks>Also sets PrecNo accordingly.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
