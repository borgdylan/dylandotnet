<Type Name="BeforeFieldInitAttr" FullName="dylan.NET.Tokenizer.AST.Tokens.Attributes.BeforeFieldInitAttr">
  <TypeSignature Language="C#" Value="public class BeforeFieldInitAttr : dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi BeforeFieldInitAttr extends dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute" />
  <AssemblyInfo>
    <AssemblyName>tokenizer.AST</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represnts the 'beforefieldinit' attribute.</summary>
    <remarks>May only be applied to classes. Forces the CLR to call their static constructors only once not on every use of the class. Has special use in static classes with static fields.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BeforeFieldInitAttr ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs a new BeforeFieldInitAttr.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
