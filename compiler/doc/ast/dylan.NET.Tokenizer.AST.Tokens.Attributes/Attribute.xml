<Type Name="Attribute" FullName="dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute">
  <TypeSignature Language="C#" Value="public abstract class Attribute : dylan.NET.Tokenizer.AST.Tokens.NonExprToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract Attribute extends dylan.NET.Tokenizer.AST.Tokens.NonExprToken" />
  <AssemblyInfo>
    <AssemblyName>tokenizer.AST</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>dylan.NET.Tokenizer.AST.Tokens.NonExprToken</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a dylan.NET method, type, field or property attribute.</summary>
    <remarks>All such attributes must inherit from this class.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Attribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs a new Attribute.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
