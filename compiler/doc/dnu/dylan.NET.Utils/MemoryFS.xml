<Type Name="MemoryFS" FullName="dylan.NET.Utils.MemoryFS">
  <TypeSignature Language="C#" Value="public static class MemoryFS" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MemoryFS extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>dnu</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implements an in-memory file system.</summary>
    <remarks>This class can be used for in-memory stream input and output from libraries/compilers.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddFile">
      <MemberSignature Language="C#" Value="public static void AddFile (string path, System.IO.Stream s);" />
      <MemberSignature Language="ILAsm" Value=".method public static void AddFile(string path, class System.IO.Stream s) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="s" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="path">The path where the stream should be placed inside the file system.</param>
        <param name="s">The stream to add to the file system.</param>
        <summary>Adds a new stream to the in-memory file system.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears all streams from the file system restoring it to an empty state.</summary>
        <remarks>The clearing operation does not dispose any of the streams so that they still could be used by code that still references them.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.Stream GetFile(string path) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path within the file system of the desired stream.</param>
        <summary>Tries to retrieve the stream at the specified path.</summary>
        <returns>The desired stream if found, else null.</returns>
        <remarks>A return value of null means the stream required was not found. Handle this special return value accordingly.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFile">
      <MemberSignature Language="C#" Value="public static bool HasFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool HasFile(string path) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path of the desired stream.</param>
        <summary>Checks for the existance of a stream inside the file system.</summary>
        <returns>True if the file system has an entry for the specified path, else false.</returns>
        <remarks>If there is an entry for the specified path and the stream at that path is null, this method still returns true.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
