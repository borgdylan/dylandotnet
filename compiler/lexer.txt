class public auto ansi Lexer

method public StmtSet Analyze(var path as string)

var stmts as StmtSet = new StmtSet()
var curstmt as Stmt = null
var curln as Line = null
var fs as string = FileIO.FileSystem::ReadAllText(path)
var crflag as boolean = false
var lfflag as boolean = false
var andflg as boolean = false
var orflg as boolean = false
var buf as string = ""
var curline as integer = 0

var len as integer = fs::get_Length()
var i as integer = -1
var ch as string = ""
var comp as integer = 0

len--

label loop
label cont

if len < 0 then
goto cont
end if

place loop

i++

ch = $string$fs::get_Chars(i)
comp = String::Compare(ch, dnu.Constants::cr)

if comp = 0 then
crflag = true
end if

comp = String::Compare(ch, dnu.Constants::lf)

if comp = 0 then
lfflag = true
end if

andflg = crflag and lfflag
orflg = crflag or lfflag

if orflg = false then
buf = String::Concat(buf, ch)
else
if lfflag = true then
curline++
Console::WriteLine(buf)
curstmt = new Stmt()
curstmt::Line = curline
curln = new Line()
curstmt = curln::Analyze(curstmt, buf)
stmts::AddStmt(curstmt)
buf = ""
crflag = false
lfflag = false
end if
end if

if i = len then
curline++
Console::WriteLine(buf)
curstmt = new Stmt()
curstmt::Line = curline
curln = new Line()
curstmt = curln::Analyze(curstmt, buf)
stmts::AddStmt(curstmt)
goto cont
else
goto loop
end if

place cont

return stmts
end method

end class