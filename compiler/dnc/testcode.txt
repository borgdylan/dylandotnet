//var dect as System.Type = gettype decimal
//var ops as MethodInfo[] = Loader::LoadSpecMtds(dect)
//var addo as MethodInfo = Loader::LoadBinOp(dect, "op_Addition", dect, dect)
//var typs as System.Type[] = newarr System.Type 2
//typs[0] = gettype string
//typs[1] = gettype string
//var t1 as System.Type = Loader::LoadClass("Type1\NestedType2")
//var t1s as string = t1::ToString()
//Console::WriteLine(t1s)
//var m1 as MethodInfo = Loader::LoadMethod(t1,"Concat",typs)
//var m1s as string = m1::ToString()
//Console::WriteLine(m1s)
//if m1 <> null then
//var t4 as System.Type = Loader::MemberTyp
//var t4s as string = t4::ToString()
//Console::WriteLine(t4s)
//end if
//var f1 as FieldInfo = Loader::LoadField(t1,"Literal")
//var f1s as string = f1::ToString()
//Console::WriteLine(f1s)
//if Loader::FldLitFlag = true then
//var t2 as System.Type = Loader::FldLitTyp
//var t2s as string = t2::ToString()
//Console::WriteLine(t2s)
//Console::WriteLine($string$Loader::FldLitVal)
//if Loader::EnumLitFlag = true then
//var t3 as System.Type = Loader::EnumLitTyp
//var t3s as string = t3::ToString()
//Console::WriteLine(t3s)
//end if
//end if

//var tt4 as TypeTok = new TypeTok("MethodInfo")
//var t4 as System.Type = Helpers::CommitEvalTTok(tt4)
//var t4s as string = t4::ToString()
//Console::WriteLine(t4s)
//var tt5 as GenericTypeTok = new GenericTypeTok("IEnumerable")
//var tt6 as TypeTok = new TypeTok("XElement")
//var ttarr as TypeTok[] = newarr TypeTok 1
//ttarr[0] = tt6
//tt5::Params = ttarr
//var t5 as System.Type = Helpers::CommitEvalTTok(tt5)
//var t5s as string = t5::ToString()
//Console::WriteLine(t5s)
//var tt7 as GenericTypeTok = new GenericTypeTok("IList")
//ttarr[0] = tt6
//tt7::Params = ttarr
//var t7 as System.Type = Helpers::CommitEvalTTok(tt7)
//var t7s as string = t5::ToString()
//ttarr = newarr TypeTok 2
//ttarr[0] = new TypeTok("String")
//ttarr[1] = new TypeTok("String")
//var tt8 as GenericTypeTok = new GenericTypeTok("IDictionary")
//tt8::Params = ttarr
//var t8 as System.Type = Helpers::CommitEvalTTok(tt8)
//var t8s as string = t8::ToString()
//Console::WriteLine(t8s)