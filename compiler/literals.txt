class public auto ansi Literal extends Token
end class

class public auto ansi StringLiteral extends Literal

field public boolean Conv
field public TypeTok TTok

method public void ctor0()
me::ctor()
me::Value = ""
me::Line = 0
Conv = false
TTok = new TypeTok()
end method

method public void ctor1(var value as string)
me::ctor()
me::Value = value
me::Line = 0
Conv = false
TTok = new TypeTok()
end method

end class

class public auto ansi CharLiteral extends Literal

field public boolean Conv
field public TypeTok TTok
field public char CharVal

method public void ctor0()
me::ctor()
me::Value = ""
me::Line = 0
CharVal = 'a'
Conv = false
TTok = new TypeTok()
end method

method public void ctor1(var value as string)
me::ctor()
me::Value = value
me::Line = 0
CharVal = 'a'
Conv = false
TTok = new TypeTok()
end method

end class

class public auto ansi NumberLiteral extends Literal

field public boolean Conv
field public TypeTok TTok

method public void ctor0()
me::ctor()
me::Value = ""
me::Line = 0
Conv = false
TTok = new TypeTok()
end method

method public void ctor1(var value as string)
me::ctor()
me::Value = value
me::Line = 0
Conv = false
TTok = new TypeTok()
end method

end class

class public auto ansi IntLiteral extends NumberLiteral

field public integer NumVal

method public void ctor0()
me::ctor()
me::Value = ""
me::Line = 0
NumVal = 0i
me::Conv = false
me::TTok = new TypeTok()
end method

method public void ctor1(var value as string)
me::ctor()
me::Value = value
me::Line = 0
NumVal = 0i
me::Conv = false
me::TTok = new TypeTok()
end method

end class

class public auto ansi DoubleLiteral extends NumberLiteral

field public double NumVal

method public void ctor0()
me::ctor()
me::Value = ""
me::Line = 0
NumVal = 0d
me::Conv = false
me::TTok = new TypeTok()
end method

method public void ctor1(var value as string)
me::ctor()
me::Value = value
me::Line = 0
NumVal = 0d
me::Conv = false
me::TTok = new TypeTok()
end method

end class

class public auto ansi SByteLiteral extends NumberLiteral

field public sbyte NumVal

method public void ctor0()
me::ctor()
me::Value = ""
me::Line = 0
NumVal = 0b
me::Conv = false
me::TTok = new TypeTok()
end method

method public void ctor1(var value as string)
me::ctor()
me::Value = value
me::Line = 0
NumVal = 0b
me::Conv = false
me::TTok = new TypeTok()
end method

end class

class public auto ansi ShortLiteral extends NumberLiteral

field public short NumVal

method public void ctor0()
me::ctor()
me::Value = ""
me::Line = 0
NumVal = 0s
me::Conv = false
me::TTok = new TypeTok()
end method

method public void ctor1(var value as string)
me::ctor()
me::Value = value
me::Line = 0
NumVal = 0s
me::Conv = false
me::TTok = new TypeTok()
end method

end class

class public auto ansi LongLiteral extends NumberLiteral

field public long NumVal

method public void ctor0()
me::ctor()
me::Value = ""
me::Line = 0
NumVal = 0l
me::Conv = false
me::TTok = new TypeTok()
end method

method public void ctor1(var value as string)
me::ctor()
me::Value = value
me::Line = 0
NumVal = 0l
me::Conv = false
me::TTok = new TypeTok()
end method

end class

class public auto ansi FloatLiteral extends NumberLiteral

field public single NumVal

method public void ctor0()
me::ctor()
me::Value = ""
me::Line = 0
NumVal = 0f
me::Conv = false
me::TTok = new TypeTok()
end method

method public void ctor1(var value as string)
me::ctor()
me::Value = value
me::Line = 0
NumVal = 0f
me::Conv = false
me::TTok = new TypeTok()
end method

end class