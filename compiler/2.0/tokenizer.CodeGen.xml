<doc>
    <assembly>
        <name>tokenizer.CodeGen</name>
    </assembly>
    <members>
        <member name="T:dylan.NET.Tokenizer.CodeGen.CodeGenerator">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.CodeGenerator">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.CodeGenerator.EmitMSIL(dylan.NET.Tokenizer.AST.Stmts.StmtSet,System.String)">
            <param name="stmts">To be added.</param>
            <param name="fpath">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.CtorItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.CtorItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.CtorItem(System.Type[],System.Reflection.Emit.ConstructorBuilder)">
            <param name="ptyps">To be added.</param>
            <param name="bld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.CtorItem.CtorBldr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.CtorItem.ParamTyps">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.Evaluator">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.Evaluator">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.ASTEmit(dylan.NET.Tokenizer.AST.Tokens.Token,System.Boolean)">
            <param name="tok">To be added.</param>
            <param name="emt">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.ConvToAST(dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="exp">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.ConvToRPN(dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="exp">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.Evaluate(dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="exp">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Evaluator.InstToken">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.isLParen(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="tok">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.isOp(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="tok">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.RetPrec(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="tok">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Evaluator.Stack">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.StoreEmit(dylan.NET.Tokenizer.AST.Tokens.Ident)">
            <param name="idt">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Evaluator.StoreEmit(dylan.NET.Tokenizer.AST.Tokens.Token,dylan.NET.Tokenizer.AST.Exprs.Expr)">
            <param name="tok">To be added.</param>
            <param name="exp">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.FieldItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.FieldItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.FieldItem(System.String,System.Type,System.Reflection.Emit.FieldBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="bld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.FieldItem.FieldBldr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.FieldItem.FieldTyp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.FieldItem.LitVal">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.FieldItem.Name">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.Helpers">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.Helpers">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.Helpers">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.CommitEvalTTok(dylan.NET.Tokenizer.AST.Tokens.TypeToks.TypeTok)">
            <param name="tt">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.DelegateFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitConv(System.Type,System.Type)">
            <param name="source">To be added.</param>
            <param name="sink">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitFldLd(System.Reflection.FieldInfo,System.Boolean)">
            <param name="fld">To be added.</param>
            <param name="stat">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitFldSt(System.Reflection.FieldInfo,System.Boolean)">
            <param name="fld">To be added.</param>
            <param name="stat">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitLiteral(dylan.NET.Tokenizer.AST.Tokens.Literals.Literal)">
            <param name="lit">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitLocLd(System.Int32,System.Boolean)">
            <param name="ind">To be added.</param>
            <param name="locarg">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitLocSt(System.Int32,System.Boolean)">
            <param name="ind">To be added.</param>
            <param name="locarg">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitMetCall(System.Reflection.MethodInfo,System.Boolean)">
            <param name="met">To be added.</param>
            <param name="stat">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitOp(dylan.NET.Tokenizer.AST.Tokens.Ops.Op,System.Boolean)">
            <param name="op">To be added.</param>
            <param name="s">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EmitPtrLd(System.Reflection.MethodInfo,System.Boolean)">
            <param name="met">To be added.</param>
            <param name="stat">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.EvalTTok(dylan.NET.Tokenizer.AST.Tokens.TypeToks.TypeTok)">
            <param name="tt">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.getCodeFromType(System.Type)">
            <param name="typ">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLbl(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLocCtor(System.Type,System.Type[])">
            <param name="t">To be added.</param>
            <param name="typs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLocFld(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLocMet(System.String,System.Type[])">
            <param name="nam">To be added.</param>
            <param name="typs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLocMet(System.String,System.Type[])">
            <param name="nam">To be added.</param>
            <param name="typs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.GetLocMetNoParams(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.getTypeFromCode(System.Int32)">
            <param name="cod">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.LeftOp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.OpCodeSuppFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.PostProcessParams(dylan.NET.Tokenizer.AST.Exprs.Expr[])">
            <param name="ps">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.PostProcessParamsConstr(dylan.NET.Tokenizer.AST.Exprs.Expr[])">
            <param name="ps">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessClassAttrs(dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute[])">
            <param name="attrs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessConst(dylan.NET.Tokenizer.AST.Tokens.Literals.ConstLiteral)">
            <param name="lit">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessFieldAttrs(dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute[])">
            <param name="attrs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessMethodAttrs(dylan.NET.Tokenizer.AST.Tokens.Attributes.Attribute[])">
            <param name="attrs">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.ProcessParams(dylan.NET.Tokenizer.AST.Exprs.Expr[])">
            <param name="ps">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.RightOp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.SetPopFlg(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.Helpers.StringFlg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.Helpers.StripDelMtdName(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="t">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.IfItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.IfItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.IfItem(System.Reflection.Emit.Label,System.Reflection.Emit.Label)">
            <param name="endl">To be added.</param>
            <param name="nbl">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.IfItem.ElsePass">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.IfItem.EndLabel">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.IfItem.NextBlkLabel">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.LabelItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.LabelItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.LabelItem(System.String,System.Reflection.Emit.Label)">
            <param name="ln">To be added.</param>
            <param name="l">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.LabelItem.Lbl">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.LabelItem.LblName">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.MethodItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.MethodItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.MethodItem(System.String,System.Type,System.Type[],System.Reflection.Emit.MethodBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="ptyps">To be added.</param>
            <param name="bld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.MethodItem.MethodBldr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.MethodItem.MethodTyp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.MethodItem.Name">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.MethodItem.ParamTyps">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.OpStack">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.OpStack">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.OpStack.getLength">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.OpStack.PopOp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.OpStack.PushOp(dylan.NET.Tokenizer.AST.Tokens.Token)">
            <param name="optok">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.OpStack.Stack">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.OpStack.TopOp">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.StmtReader">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.StmtReader">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.StmtReader.Read(dylan.NET.Tokenizer.AST.Stmts.Stmt,System.String)">
            <param name="stm">To be added.</param>
            <param name="fpath">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.SymTable">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.SymTable">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddCtor(System.Type[],System.Reflection.Emit.ConstructorBuilder)">
            <param name="ptyps">To be added.</param>
            <param name="met">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddFld(System.String,System.Type,System.Reflection.Emit.FieldBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="fld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddIf">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddLbl(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddMet(System.String,System.Type,System.Type[],System.Reflection.Emit.MethodBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="ptyps">To be added.</param>
            <param name="met">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddNestedCtor(System.Type[],System.Reflection.Emit.ConstructorBuilder)">
            <param name="ptyps">To be added.</param>
            <param name="met">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddNestedFld(System.String,System.Type,System.Reflection.Emit.FieldBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="fld">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddNestedMet(System.String,System.Type,System.Type[],System.Reflection.Emit.MethodBuilder)">
            <param name="nme">To be added.</param>
            <param name="typ">To be added.</param>
            <param name="ptyps">To be added.</param>
            <param name="met">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddTypArr(System.Type[])">
            <param name="arr">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.AddVar(System.String,System.Boolean,System.Int32,System.Type)">
            <param name="nme">To be added.</param>
            <param name="la">To be added.</param>
            <param name="ind">To be added.</param>
            <param name="typ">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.CmpTyps(System.Type[],System.Type[])">
            <param name="arra">To be added.</param>
            <param name="arrb">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.CtorLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindCtor(System.Type[])">
            <param name="params">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindFld(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindLbl(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindMet(System.String,System.Type[])">
            <param name="nam">To be added.</param>
            <param name="params">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindMetNoParams(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.FindVar(System.String)">
            <param name="nam">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.FldLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.IfLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.LblLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.MetLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.NestedCtorLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.NestedFldLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.NestedMetLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.PopIf">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.PopTypArr">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ReadIfElsePass">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ReadIfEndLbl">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ReadIfNxtBlkLbl">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetCtor">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetFld">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetIf">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetLbl">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetMet">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetNestedCtor">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetNestedFld">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetNestedMet">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.ResetVar">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.SetIfElsePass">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:dylan.NET.Tokenizer.CodeGen.SymTable.SetIfNxtBlkLbl">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.TypLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.SymTable.VarLst">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.TypeArr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.TypeArr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.TypeArr.Arr">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:dylan.NET.Tokenizer.CodeGen.VarItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.VarItem">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:dylan.NET.Tokenizer.CodeGen.VarItem(System.String,System.Boolean,System.Int32,System.Type)">
            <param name="nme">To be added.</param>
            <param name="la">To be added.</param>
            <param name="ind">To be added.</param>
            <param name="typ">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.Index">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.LocArg">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.Name">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="F:dylan.NET.Tokenizer.CodeGen.VarItem.VarTyp">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
    </members>
</doc>
