class public auto ansi StmtReader

method public void Read(var stm as Stmt)

var typ as System.Type
var b as boolean = false

label fin

typ = gettype RefasmStmt
b = typ::IsInstanceOfType($object$stm)

if b = true then
var rastm as RefasmStmt = stm
var ap as Token = rastm::AsmPath

var tmpstr as string = String::Concat(Utils.Constants::quot,"*",Utils.Constants::quot)
var compb as boolean = Utils.ParseUtils::LikeOP(ap::Value, tmpstr)

if compb = true then
tmpstr = ap::Value
var tmpchrarr as char[] = newarr char 1
tmpchrarr[0] = $char$Utils.Constants::quot
tmpstr = tmpstr::Trim(tmpchrarr)
ap::Value = tmpstr
end if

var asm as Assembly = Assembly::LoadFrom(ap::Value)
Importer::AddAsm(asm)
goto fin
end if

typ = gettype ImportStmt
b = typ::IsInstanceOfType($object$stm)

if b = true then
var istm as ImportStmt = stm
var ina as Token = istm::NS

tmpstr = String::Concat(Utils.Constants::quot,"*",Utils.Constants::quot)
compb = Utils.ParseUtils::LikeOP(ina::Value, tmpstr)

if compb = true then
tmpstr = ina::Value
tmpchrarr = newarr char 1
tmpchrarr[0] = $char$Utils.Constants::quot
tmpstr = tmpstr::Trim(tmpchrarr)
ina::Value = tmpstr
end if

Importer::AddImp(ina::Value)
goto fin
end if

typ = gettype LocimportStmt
b = typ::IsInstanceOfType($object$stm)

if b = true then
var listm as LocimportStmt = stm
var lina as Token = listm::NS

tmpstr = String::Concat(Utils.Constants::quot,"*",Utils.Constants::quot)
compb = Utils.ParseUtils::LikeOP(lina::Value, tmpstr)

if compb = true then
tmpstr = lina::Value
tmpchrarr = newarr char 1
tmpchrarr[0] = $char$Utils.Constants::quot
tmpstr = tmpstr::Trim(tmpchrarr)
lina::Value = tmpstr
end if

Importer::AddLocImp(lina::Value)
goto fin
end if


place fin

end method

end class