class public auto ansi NameReader

field public string Name
field public string Surname
field public long ID
field public long Count
field public string TableName

method public void ctor0()
me::ctor()
Name = ""
Surname = ""
TableName = ""
ID = 0l
Count = 0l
end method

method public void CreateAndOpenTable(var constr as string, var tblname as string)
SQLConnection::InitCon(constr)
SQLConnection::BeginTrans()
var str as string = String::Concat("create table ", tblname, "(Name text, Surname text);")
SQLConnection::PrepCmd(str)
SQLConnection::ExecNonQuery()
SQLConnection::CommitTrans()
SQLConnection::EndTrans()
str = String::Concat("select rowid,* from ", tblname, ";")
SQLConnection::PrepCmd(str)
SQLConnection::ExecQuery()
Count = $long$SQLConnection::RwCount
TableName = tblname
end method

method public void OpenTable(var constr as string, var tblname as string)
SQLConnection::InitCon(constr)
var str as string = String::Concat("select rowid,* from ", tblname, ";")
SQLConnection::PrepCmd(str)
SQLConnection::ExecQuery()
Count = $long$SQLConnection::RwCount
TableName = tblname
end method

method public void AddRecord()
SQLConnection::BeginTrans()
var str as string = String::Concat("insert into ", TableName, " values('','');")
SQLConnection::PrepCmd(str)
SQLConnection::ExecNonQuery()
SQLConnection::CommitTrans()
SQLConnection::EndTrans()
Count = Count + 1l
end method

method public void LoadData(var id as long)
ID = id
var str as string = String::Concat("select rowid,* from ", TableName, " where rowid = ", $string$ID)
str = String::Concat(str, ";")
SQLConnection::PrepCmd(str)
SQLConnection::ExecQuery()
Name = SQLConnection::get_RowItemString(0,1)
Surname = SQLConnection::get_RowItemString(0,2)
end method

method public void WriteData(var id as long, var nm as string, var snm as string)
ID = id
SQLConnection::BeginTrans()
var str as string = String::Concat("update ", TableName, " set Name = '", nm)
str = String::Concat(str, "' where rowid = ", $string$ID)
SQLConnection::PrepCmd(str)
SQLConnection::ExecNonQuery()
str = String::Concat("update ", TableName, " set Surname = '", snm)
str = String::Concat(str, "' where rowid = ", $string$ID)
SQLConnection::PrepCmd(str)
SQLConnection::ExecNonQuery()
SQLConnection::CommitTrans()
SQLConnection::EndTrans()
end method

method public string GetMember(var mem as string)
label fin
var str as string = ""
var comp as integer = 0

comp = String::Compare("ID", mem)
if comp = 0 then
str = $string$ID
goto fin
end if

comp = String::Compare("Name", mem)
if comp = 0 then
str = Name
goto fin
end if

comp = String::Compare("Surname", mem)
if comp = 0 then
str = Surname
goto fin
end if

comp = String::Compare("*", mem)
if comp = 0 then
str = String::Concat("ID: ", $string$ID, Utils.Constants::crlf)
str = String::Concat(str, "Name: ", Name, Utils.Constants::crlf)
str = String::Concat(str, "Surname: ", Surname, Utils.Constants::crlf)
goto fin
else
goto fin
end if

place fin

return str

end method

method public string GetRecordString()
return GetMember("*")
end method

method public void DoQuery(var sel as string, var whr as string)

var str as string = String::Concat("select ", sel, " from ", TableName)
str = String::Concat(str, " where ", whr, ";")
SQLConnection::PrepCmd(str)
SQLConnection::ExecQuery()

end method

method public string DoListQuery(var sel as string, var whr as string)

var str as string = String::Concat("select rowid,* from ", TableName, " where ")
str = String::Concat(str, whr, ";")
SQLConnection::PrepCmd(str)
SQLConnection::ExecQuery()

var i as integer = -1
var len as integer = SQLConnection::RwCount - 1
var str2 as string = ""

label loop
label cont

place loop

i++

ID = SQLConnection::get_RowItemInt64(i, 0)
Name = SQLConnection::get_RowItemString(i, 1)
Surname = SQLConnection::get_RowItemString(i, 2)

str = GetMember(sel)
str2 = String::Concat(str2, str, Utils.Constants::crlf)

if i = len then
goto cont
else
goto loop
end if

place cont

return str2

end method

end class