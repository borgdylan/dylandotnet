class public auto ansi ExamResultsReader

field public string Subject
field public string Session
field public long Year
field public long Marks
field public long ID
field public long Count
field public string TableName

method public void ctor0()
me::ctor()
Subject = ""
Session = ""
Year = 0l
Marks = 0l
TableName = ""
ID = 0l
Count = 0l
end method

method public void CreateAndOpenTable(var constr as string, var tblname as string)
SQLConnection::InitCon(constr)
SQLConnection::BeginTrans()
var str as string = String::Concat("create table ", tblname, "(Subject text, Session text, Year INTEGER, Marks INTEGER);")
SQLConnection::PrepCmd(str)
SQLConnection::ExecNonQuery()
SQLConnection::CommitTrans()
SQLConnection::EndTrans()
str = String::Concat("select rowid,* from ", tblname, ";")
SQLConnection::PrepCmd(str)
SQLConnection::ExecQuery()
Count = $long$SQLConnection::RwCount
TableName = tblname
end method

method public void OpenTable(var constr as string, var tblname as string)
SQLConnection::InitCon(constr)
var str as string = String::Concat("select rowid,* from ", tblname, ";")
SQLConnection::PrepCmd(str)
SQLConnection::ExecQuery()
Count = $long$SQLConnection::RwCount
TableName = tblname
end method

method public void AddRecord()
SQLConnection::BeginTrans()
var str as string = String::Concat("insert into ", TableName, " values('','',0,0);")
SQLConnection::PrepCmd(str)
SQLConnection::ExecNonQuery()
SQLConnection::CommitTrans()
SQLConnection::EndTrans()
Count = Count + 1l
end method

method public void LoadData(var id as long)
ID = id
var str as string = String::Concat("select rowid,* from ", TableName, " where rowid = ", $string$ID)
str = String::Concat(str, ";")
SQLConnection::PrepCmd(str)
SQLConnection::ExecQuery()
Subject = SQLConnection::get_RowItemString(0,1)
Session = SQLConnection::get_RowItemString(0,2)
Year = SQLConnection::get_RowItemInt64(0,3)
Marks = SQLConnection::get_RowItemInt64(0,4)
end method

method public void WriteData(var id as long, var sbj as string, var sesn as string, var yr as long, var mks as long)
ID = id
SQLConnection::BeginTrans()
var str as string = String::Concat("update ", TableName, " set Subject = '", sbj)
str = String::Concat(str, "' where rowid = ", $string$ID)
SQLConnection::PrepCmd(str)
SQLConnection::ExecNonQuery()
str = String::Concat("update ", TableName, " set Session = '", sesn)
str = String::Concat(str, "' where rowid = ", $string$ID)
SQLConnection::PrepCmd(str)
SQLConnection::ExecNonQuery()
str = String::Concat("update ", TableName, " set Year = ", $string$yr)
str = String::Concat(str, " where rowid = ", $string$ID)
SQLConnection::PrepCmd(str)
SQLConnection::ExecNonQuery()
str = String::Concat("update ", TableName, " set Marks = ", $string$mks)
str = String::Concat(str, " where rowid = ", $string$ID)
SQLConnection::PrepCmd(str)
SQLConnection::ExecNonQuery()
SQLConnection::CommitTrans()
SQLConnection::EndTrans()
end method

method public string GetMember(var mem as string)
label fin
var str as string = ""
var comp as integer = 0

comp = String::Compare("ID", mem)
if comp = 0 then
str = $string$ID
goto fin
end if

comp = String::Compare("Subject", mem)
if comp = 0 then
str = Subject
goto fin
end if

comp = String::Compare("Session", mem)
if comp = 0 then
str = Session
goto fin
end if

comp = String::Compare("Year", mem)
if comp = 0 then
str = $string$Year
goto fin
end if

comp = String::Compare("Marks", mem)
if comp = 0 then
str = $string$Marks
goto fin
end if

comp = String::Compare("*", mem)
if comp = 0 then
str = String::Concat("ID: ", $string$ID, Utils.Constants::crlf)
str = String::Concat(str, "Subject: ", Subject, Utils.Constants::crlf)
str = String::Concat(str, "Session: ", Session, Utils.Constants::crlf)
str = String::Concat(str, "Year: ", $string$Year, Utils.Constants::crlf)
str = String::Concat(str, "Marks: ", $string$Marks, Utils.Constants::crlf)
goto fin
else
goto fin
end if

place fin

return str

end method

method public string GetRecordString()
return GetMember("*")
end method

method public void DoQuery(var sel as string, var whr as string)

var str as string = String::Concat("select ", sel, " from ", TableName)
str = String::Concat(str, " where ", whr, ";")
SQLConnection::PrepCmd(str)
SQLConnection::ExecQuery()

end method

method public string DoListQuery(var sel as string, var whr as string)

var str as string = String::Concat("select rowid,* from ", TableName, " where ")
str = String::Concat(str, whr, ";")
SQLConnection::PrepCmd(str)
SQLConnection::ExecQuery()

var i as integer = -1
var len as integer = SQLConnection::RwCount - 1
var str2 as string = ""

label loop
label cont

place loop

i++

ID = SQLConnection::get_RowItemInt64(i, 0)
Subject = SQLConnection::get_RowItemString(i,1)
Session = SQLConnection::get_RowItemString(i,2)
Year = SQLConnection::get_RowItemInt64(i,3)
Marks = SQLConnection::get_RowItemInt64(i,4)

str = GetMember(sel)
str2 = String::Concat(str2, str, Utils.Constants::crlf)

if i = len then
goto cont
else
goto loop
end if

place cont

return str2

end method

end class