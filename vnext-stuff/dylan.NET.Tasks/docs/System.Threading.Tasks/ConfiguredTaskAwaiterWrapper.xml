<Type Name="ConfiguredTaskAwaiterWrapper" FullName="System.Threading.Tasks.ConfiguredTaskAwaiterWrapper">
  <TypeSignature Language="C#" Value="public class ConfiguredTaskAwaiterWrapper : System.Runtime.CompilerServices.INotifyCompletion, System.Threading.Tasks.IAwaiter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ConfiguredTaskAwaiterWrapper extends System.Object implements class System.Runtime.CompilerServices.INotifyCompletion, class System.Threading.Tasks.IAwaiter" />
  <AssemblyInfo>
    <AssemblyName>dylan.NET.Tasks</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.CompilerServices.INotifyCompletion</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.IAwaiter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>An IAwaiter implementation that wraps a ConfiguredTaskAwaiter.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfiguredTaskAwaiterWrapper (System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter awaiter);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(valuetype System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter awaiter) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="awaiter" Type="System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter" />
      </Parameters>
      <Docs>
        <param name="awaiter">The ConfiguredTaskAwaiter to wrap.</param>
        <summary>Constructs a new ConfiguredTaskAwaiter wrapper.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResult">
      <MemberSignature Language="C#" Value="public virtual void GetResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetResult() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Concludes the await, throwing any exceptions thrown by the configured task in the process.</summary>
        <remarks>Calls the underlying GetResult.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public virtual bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the completion state of the configured task being awaited.</summary>
        <value>True if the completion handler can be run immediately, else false.</value>
        <remarks>Gets the underlying IsCompleted value.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="public virtual void OnCompleted (Action continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCompleted(class System.Action continuation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuation" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="continuation">The function to execute as the continuation.</param>
        <summary>Registers the given function to run when the configured task resolves to a value/fails.</summary>
        <remarks>Calls the underlying OnCompleted.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
