<Type Name="TaskWrapper&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskWrapper&lt;TResult&gt;">
  <TypeSignature Language="C#" Value="public class TaskWrapper&lt;TResult&gt; : System.Threading.Tasks.IAwaitable&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TaskWrapper`1&lt;TResult&gt; extends System.Object implements class System.Threading.Tasks.IAwaitable`1&lt;!TResult&gt;" />
  <AssemblyInfo>
    <AssemblyName>dylan.NET.Tasks</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.IAwaitable&lt;TResult&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TResult">The type of result returned by this Task.</typeparam>
    <summary>An IAwaitable&lt;TResult&gt; implementation that wraps a Task&lt;TResult&gt;.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskWrapper (System.Threading.Tasks.Task&lt;TResult&gt; awaitable);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task`1&lt;!TResult&gt; awaitable) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="awaitable" Type="System.Threading.Tasks.Task&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="awaitable">The Task&lt;TResult&gt; that should be wrapped.</param>
        <summary>Constructs a new Task&lt;TResult&gt; wrapper.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.IAwaiter&lt;TResult&gt; GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.IAwaiter`1&lt;!TResult&gt; GetAwaiter() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.IAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the IAwaiter&lt;TResult&gt; used to await this Task&lt;TResult&gt;.</summary>
        <returns>The IAwaiter&lt;TResult&gt; used to await this Task&lt;TResult&gt;.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
